{"ast":null,"code":"import _slicedToArray from \"/Users/kdev/Documents/DCTAbi/contact-manager/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport axios from '../config/axios';\nimport { setContacts } from './contacts'; // sync \n\nexport const setUser = user => {\n  return {\n    type: 'SET_USER',\n    payload: user\n  };\n}; //sync\n\nexport const registerUser = user => {\n  return {\n    type: 'REGISTER_USER',\n    payload: user\n  };\n}; // async \n// handle page reloads\n\nexport const startGetUser = () => {\n  return dispatch => {\n    Promise.all([axios.get('/users/account', {\n      headers: {\n        'x-auth': localStorage.getItem('token')\n      }\n    }), axios.get('/contacts', {\n      headers: {\n        'x-auth': localStorage.getItem('token')\n      }\n    })]).then(values => {\n      console.log(values);\n\n      const _values = _slicedToArray(values, 2),\n            user = _values[0],\n            contacts = _values[1];\n\n      dispatch(setUser(user.data));\n      dispatch(setContacts(contacts.data));\n    });\n  };\n}; // handle form submission\n\nexport const startSetUser = (formData, props) => {\n  return dispatch => {\n    axios.post('/users/login', formData).then(response => {\n      // console.log(response.data)\n      const _response$data = response.data,\n            token = _response$data.token,\n            user = _response$data.user;\n      localStorage.setItem('token', token);\n      dispatch(setUser(user));\n      return axios.get('/contacts', {\n        headers: {\n          'x-auth': token\n        }\n      });\n    }).then(response => {\n      const contacts = response.data;\n      dispatch(setContacts(contacts));\n      props.history.push('/contacts');\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const startRegisterUser = (formData, props) => {\n  return dispatch => {};\n};","map":{"version":3,"sources":["/Users/kdev/Documents/DCTAbi/contact-manager/client/src/actions/user.js"],"names":["axios","setContacts","setUser","user","type","payload","registerUser","startGetUser","dispatch","Promise","all","get","headers","localStorage","getItem","then","values","console","log","contacts","data","startSetUser","formData","props","post","response","token","setItem","history","push","catch","err","startRegisterUser"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,iBAAlB;AACA,SAASC,WAAT,QAA4B,YAA5B,C,CACA;;AACA,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAU;AAC7B,SAAO;AACHC,IAAAA,IAAI,EAAE,UADH;AAEHC,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM,C,CAOP;;AACA,OAAO,MAAMG,YAAY,GAAIH,IAAD,IAAU;AAClC,SAAO;AACHC,IAAAA,IAAI,EAAG,eADJ;AAEHC,IAAAA,OAAO,EAAGF;AAFP,GAAP;AAIH,CALM,C,CAOP;AACA;;AACA,OAAO,MAAMI,YAAY,GAAG,MAAM;AAC9B,SAAQC,QAAD,IAAc;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACV,KAAK,CAACW,GAAN,CAAU,gBAAV,EAA4B;AACrCC,MAAAA,OAAO,EAAE;AACL,kBAAUC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADL;AAD4B,KAA5B,CAAD,EAIRd,KAAK,CAACW,GAAN,CAAU,WAAV,EAAuB;AACvBC,MAAAA,OAAO,EAAE;AACL,kBAAUC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADL;AADc,KAAvB,CAJQ,CAAZ,EASCC,IATD,CASMC,MAAM,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AADY,qCAEcA,MAFd;AAAA,YAELb,IAFK;AAAA,YAECgB,QAFD;;AAGZX,MAAAA,QAAQ,CAACN,OAAO,CAACC,IAAI,CAACiB,IAAN,CAAR,CAAR;AACAZ,MAAAA,QAAQ,CAACP,WAAW,CAACkB,QAAQ,CAACC,IAAV,CAAZ,CAAR;AACH,KAdD;AAeH,GAhBD;AAkBH,CAnBM,C,CAsBP;;AACA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC7C,SAAQf,QAAD,IAAc;AACjBR,IAAAA,KAAK,CAACwB,IAAN,CAAW,cAAX,EAA2BF,QAA3B,EACKP,IADL,CACUU,QAAQ,IAAI;AACd;AADc,6BAEUA,QAAQ,CAACL,IAFnB;AAAA,YAENM,KAFM,kBAENA,KAFM;AAAA,YAECvB,IAFD,kBAECA,IAFD;AAGdU,MAAAA,YAAY,CAACc,OAAb,CAAqB,OAArB,EAA8BD,KAA9B;AACAlB,MAAAA,QAAQ,CAACN,OAAO,CAACC,IAAD,CAAR,CAAR;AACA,aAAOH,KAAK,CAACW,GAAN,CAAU,WAAV,EAAuB;AAC1BC,QAAAA,OAAO,EAAE;AACL,oBAAUc;AADL;AADiB,OAAvB,CAAP;AAKH,KAXL,EAYKX,IAZL,CAYUU,QAAQ,IAAI;AACd,YAAMN,QAAQ,GAAGM,QAAQ,CAACL,IAA1B;AACAZ,MAAAA,QAAQ,CAACP,WAAW,CAACkB,QAAD,CAAZ,CAAR;AACAI,MAAAA,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmB,WAAnB;AACH,KAhBL,EAiBKC,KAjBL,CAiBWC,GAAG,IAAI;AACVd,MAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACH,KAnBL;AAoBH,GArBD;AAsBH,CAvBM;AAyBP,OAAO,MAAMC,iBAAiB,GAAG,CAACV,QAAD,EAAWC,KAAX,KAAqB;AAClD,SAAQf,QAAD,IAAc,CAEpB,CAFD;AAGH,CAJM","sourcesContent":["import axios from '../config/axios'\nimport { setContacts } from './contacts'\n// sync \nexport const setUser = (user) => {\n    return {\n        type: 'SET_USER',\n        payload: user\n    }\n}\n\n//sync\nexport const registerUser = (user) => {\n    return {\n        type : 'REGISTER_USER',\n        payload : user\n    }\n}\n\n// async \n// handle page reloads\nexport const startGetUser = () => {\n    return (dispatch) => {\n        Promise.all([axios.get('/users/account', { \n            headers: {\n                'x-auth': localStorage.getItem('token')\n            }\n        }), axios.get('/contacts', {\n            headers: {\n                'x-auth': localStorage.getItem('token')\n            }\n        })])\n        .then(values => {\n            console.log(values)\n            const [user, contacts ] = values \n            dispatch(setUser(user.data))\n            dispatch(setContacts(contacts.data))\n        })\n    }\n    \n}\n\n\n// handle form submission\nexport const startSetUser = (formData, props) => {\n    return (dispatch) => {\n        axios.post('/users/login', formData)\n            .then(response => {\n                // console.log(response.data)\n                const { token, user } = response.data \n                localStorage.setItem('token', token) \n                dispatch(setUser(user))\n                return axios.get('/contacts', {\n                    headers: {\n                        'x-auth': token\n                    }\n                })\n            })\n            .then(response => {\n                const contacts = response.data\n                dispatch(setContacts(contacts))\n                props.history.push('/contacts')\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n}\n\nexport const startRegisterUser = (formData, props) => {\n    return (dispatch) => {\n        \n    }\n}"]},"metadata":{},"sourceType":"module"}