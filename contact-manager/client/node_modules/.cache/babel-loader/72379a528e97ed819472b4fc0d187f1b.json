{"ast":null,"code":"import axios from '../config/axios';\nimport { setErrors, clearErrors } from './formErrors'; // sync \n\nexport const setContacts = contacts => {\n  return {\n    type: 'SET_CONTACTS',\n    payload: contacts\n  };\n};\nexport const addContact = contact => {\n  return {\n    type: 'ADD_CONTACT',\n    payload: contact\n  };\n};\nexport const clearContacts = () => {\n  return {\n    type: 'CLEAR_CONTACTS'\n  };\n}; // asyn \n\nexport const startAddContact = formData => {\n  return dispatch => {\n    axios.post('/contacts', formData, {\n      headers: {\n        'x-auth': localStorage.getItem('token')\n      }\n    }).then(response => {\n      // const contact = response.data \n      console.log(response.data);\n\n      if (response.data.hasOwnProperty('errors')) {\n        // alert(response.data.message)\n        // console.log(response.data)\n        dispatch(setErrors(response.data.errors));\n      } else {\n        const contact = response.data;\n        dispatch(addContact(contact));\n        dispatch(clearErrors());\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/kdev/Documents/DCTAbi/contact-manager/client/src/actions/contacts.js"],"names":["axios","setErrors","clearErrors","setContacts","contacts","type","payload","addContact","contact","clearContacts","startAddContact","formData","dispatch","post","headers","localStorage","getItem","then","response","console","log","data","hasOwnProperty","errors"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,iBAAlB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,cAAvC,C,CACA;;AAEA,OAAO,MAAMC,WAAW,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,IAAI,EAAE,cADH;AAEHC,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,UAAU,GAAIC,OAAD,IAAa;AACnC,SAAO;AACHH,IAAAA,IAAI,EAAE,aADH;AAEHC,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SAAO;AACHJ,IAAAA,IAAI,EAAG;AADJ,GAAP;AAGH,CAJM,C,CAMP;;AACA,OAAO,MAAMK,eAAe,GAAIC,QAAD,IAAc;AACzC,SAAQC,QAAD,IAAc;AACjBZ,IAAAA,KAAK,CAACa,IAAN,CAAW,WAAX,EAAwBF,QAAxB,EAAkC;AAC9BG,MAAAA,OAAO,EAAE;AACL,kBAAUC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADL;AADqB,KAAlC,EAKCC,IALD,CAKMC,QAAQ,IAAI;AACd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;;AACA,UAAGH,QAAQ,CAACG,IAAT,CAAcC,cAAd,CAA6B,QAA7B,CAAH,EAA2C;AACvC;AACA;AACAV,QAAAA,QAAQ,CAACX,SAAS,CAACiB,QAAQ,CAACG,IAAT,CAAcE,MAAf,CAAV,CAAR;AACH,OAJD,MAIO;AACH,cAAMf,OAAO,GAAGU,QAAQ,CAACG,IAAzB;AACAT,QAAAA,QAAQ,CAACL,UAAU,CAACC,OAAD,CAAX,CAAR;AACAI,QAAAA,QAAQ,CAACV,WAAW,EAAZ,CAAR;AACH;AACJ,KAjBD;AAkBH,GAnBD;AAoBH,CArBM","sourcesContent":["import axios from '../config/axios'\nimport { setErrors, clearErrors } from './formErrors'\n// sync \n\nexport const setContacts = (contacts) => {\n    return {\n        type: 'SET_CONTACTS',\n        payload: contacts\n    }\n}\n\nexport const addContact = (contact) => {\n    return {\n        type: 'ADD_CONTACT',\n        payload: contact\n    }\n}\n\nexport const clearContacts = () => {\n    return {\n        type : 'CLEAR_CONTACTS'\n    }\n}\n\n// asyn \nexport const startAddContact = (formData) => {\n    return (dispatch) => {\n        axios.post('/contacts', formData, {\n            headers: {\n                'x-auth': localStorage.getItem('token')\n            }\n        })\n        .then(response => {\n            // const contact = response.data \n            console.log(response.data)\n            if(response.data.hasOwnProperty('errors')) {\n                // alert(response.data.message)\n                // console.log(response.data)\n                dispatch(setErrors(response.data.errors))\n            } else {\n                const contact = response.data  \n                dispatch(addContact(contact))\n                dispatch(clearErrors())\n            }\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}