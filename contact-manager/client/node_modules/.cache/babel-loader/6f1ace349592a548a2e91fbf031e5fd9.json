{"ast":null,"code":"var _jsxFileName = \"/Users/kdev/Documents/DCTAbi/contact-manager/client/src/components/contacts/Form.js\";\nimport React from 'react';\nimport { startAddContact } from '../../actions/contacts';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport { Alert } from 'reactstrap';\nimport { clearErrors } from '../../actions/formErrors';\n\nclass ContactForm extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const formData = {\n        name: this.state.name,\n        email: this.state.email,\n        mobile: this.state.mobile\n      };\n      this.props.dispatch(startAddContact(formData));\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      mobile: '',\n      hasErrors: ''\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.dispatch(clearErrors());\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Add Contact\"), !isEmpty(this.props.formErrors) && React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Form Errors: \"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, Object.entries(this.props.formErrors).map((entry, i) => {\n      return React.createElement(\"li\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, entry[0], \" : \", entry[1].message);\n    }))), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      name: \"name\",\n      id: \"name\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), this.props.formErrors.hasOwnProperty('name') && React.createElement(\"p\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.props.formErrors.name.message)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      name: \"email\",\n      id: \"email\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"mobile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Mobile\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.mobile,\n      onChange: this.handleChange,\n      name: \"mobile\",\n      id: \"mobile\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    formErrors: state.formErrors\n  };\n};\n\nexport default connect(mapStateToProps)(ContactForm);","map":{"version":3,"sources":["/Users/kdev/Documents/DCTAbi/contact-manager/client/src/components/contacts/Form.js"],"names":["React","startAddContact","connect","isEmpty","Alert","clearErrors","ContactForm","Component","constructor","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","formData","state","email","mobile","props","dispatch","hasErrors","componentWillUnmount","render","formErrors","Object","entries","map","entry","i","message","hasOwnProperty","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react' \nimport { startAddContact} from '../../actions/contacts'\nimport { connect } from 'react-redux'\nimport isEmpty from 'lodash/isEmpty'\nimport { Alert } from 'reactstrap'\nimport { clearErrors } from '../../actions/formErrors'\n\nclass ContactForm extends React.Component {\n    constructor() {\n        super() \n        this.state = {\n            name: '', \n            email: '',\n            mobile: '',\n            hasErrors: ''\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault() \n        const formData = {\n            name: this.state.name,\n            email: this.state.email,\n            mobile: this.state.mobile\n        }\n        this.props.dispatch(startAddContact(formData))\n    }   \n\n    componentWillUnmount() {\n        this.props.dispatch(clearErrors())\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Add Contact</h2>\n                {\n                   !isEmpty(this.props.formErrors) && (\n                       <Alert color=\"danger\">\n                            <h3>Form Errors: </h3>\n                            <ul>\n                                { Object.entries(this.props.formErrors).map((entry,i) => {\n                                    return (\n                                        <li key={i}>{entry[0]} : {entry[1].message }</li>\n                                    )\n                                })}\n                            </ul>\n                        </Alert>\n                   )\n                }\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Name</label> \n                        <input type=\"text\" value={this.state.name} onChange={this.handleChange} name=\"name\" id=\"name\" className=\"form-control\" />\n                        {\n                           this.props.formErrors.hasOwnProperty('name') &&  <p className=\"text-danger\">{this.props.formErrors.name.message }</p>\n                        }\n                    </div>\n                    \n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"text\" value={this.state.email} onChange={this.handleChange} name=\"email\" id=\"email\" className=\"form-control\"/>\n                    </div>\n                    \n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"mobile\">Mobile</label>\n                        <input type=\"text\" value={this.state.mobile} onChange={this.handleChange} name=\"mobile\" id=\"mobile\" className=\"form-control\"/>\n                    </div>\n                    \n                    <input type=\"submit\" className=\"btn btn-primary\" />\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        formErrors: state.formErrors\n    }\n}\nexport default connect(mapStateToProps)(ContactForm)"]},"metadata":{},"sourceType":"module"}